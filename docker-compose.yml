version: "3.9"

services:
  citilystbackend:
    container_name: citilyst_be_prod
    image: genqserve/citilyst-backend:latest
    build:
      context: .
      dockerfile: ./Dockerfile 
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - redis
      - n8n
    restart: always
    volumes:
      - /home/ubuntu/credentials:/credentials
    networks:
      - app_network

  redis:
    image: "redis:7.2"
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - app_network
    restart: always

  n8n:
    image: n8nio/n8n
    container_name: citilyst_n8n
    ports:
      - "5678:5678"
    environment:
      # Basic n8n Configuration
      - N8N_HOST=n8n.genqserve.rekrutgenai.com
      - N8N_PROTOCOL=https
      - N8N_PORT=5678
      - WEBHOOK_URL=https://n8n.genqserve.rekrutgenai.com
      
      - N8N_RUNNERS_ENABLED=true

      # Security & Production Settings
      - N8N_SECURE_COOKIE=true
      - N8N_METRICS=true
      - N8N_LOG_LEVEL=info
      - N8N_LOG_OUTPUT=console
      
      # Timezone
      - GENERIC_TIMEZONE=Asia/Jakarta
      - TZ=Asia/Jakarta
  
      # OAuth & Authentication Settings
      - N8N_OAUTH_CALLBACK_URLS=https://n8n.genqserve.rekrutgenai.com/rest/oauth2-credential/callback,https://n8n.genqserve.rekrutgenai.com/rest/oauth1-credential/callback
      
      # Editor Base URL (important for OAuth)
      - N8N_EDITOR_BASE_URL=https://n8n.genqserve.rekrutgenai.com
      
      # Push Connection (for real-time updates)
      - N8N_PUSH_BACKEND=websocket
      
      # Custom App ID
      - ONESIGNAL_APP_ID=ecfccbe5-b876-4be9-b49f-5665f98b50d4
      
      # Performance Settings
      # - N8N_PAYLOAD_SIZE_MAX=16777216
      # - NODE_OPTIONS=--max-old-space-size=4096
      
      # # Queue Settings (if using queue mode)
      # - QUEUE_BULL_REDIS_HOST=redis
      # - QUEUE_BULL_REDIS_PORT=6379
      # - QUEUE_HEALTH_CHECK_ACTIVE=true
      
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - app_network
    restart: always
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  app_network:
    driver: bridge

volumes:
  n8n_data:
    external: true